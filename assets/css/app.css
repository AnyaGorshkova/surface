@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto/Roboto.woff") format("woff"), url("../fonts/Roboto/Roboto.woff2") format("woff2"), url("../fonts/Roboto/Roboto.ttf") format("truetype");
  font-style: normal;
  font-weight: 400; }

*::-webkit-input-placeholder {
  color: #666;
  opacity: 1; }

*:-moz-placeholder {
  color: #666;
  opacity: 1; }

*::-moz-placeholder {
  color: #666;
  opacity: 1; }

*:-ms-input-placeholder {
  color: #666;
  opacity: 1; }

body input:focus:required:invalid,
body textarea:focus:required:invalid {
  color: #666; }

body input:required:valid,
body textarea:required:valid {
  color: #666; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

html, body {
  height: 100%; }

body {
  font-size: 16px;
  min-width: 320px;
  position: relative;
  line-height: 1.75;
  font-family: "roboto", sans-serif;
  overflow-x: hidden;
  opacity: 1; }

.vk {
  background-image: url(../img/sprite/sprite.png);
  background-position: -70px 0px;
  width: 31px;
  height: 17px; }

/*==========  Desktop First  ==========*/
/* Large Devices, Wide Screens */
@media only screen and (max-width: 1200px) {
  /**/ }

/* Medium Devices, Desktops */
@media only screen and (max-width: 992px) {
  /**/ }

/* Small Devices, Tablets */
@media only screen and (max-width: 768px) {
  /**/ }

/* Extra Small Devices, Phones */
@media only screen and (max-width: 480px) {
  /**/ }

/* Custom, iPhone Retina */
@media only screen and (max-width: 320px) {
  /**/ }

/*==========  Mobile First  ==========*/
/* Custom, iPhone Retina */
@media only screen and (min-width: 320px) {
  /**/ }

/* Extra Small Devices, Phones */
@media only screen and (min-width: 480px) {
  /**/ }

/* Small Devices, Tablets */
@media only screen and (min-width: 768px) {
  /**/ }

/* Medium Devices, Desktops */
@media only screen and (min-width: 992px) {
  /**/ }

/* Large Devices, Wide Screens */
@media only screen and (min-width: 1200px) {
  /**/ }

@media print, (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */ }

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;base64, */
